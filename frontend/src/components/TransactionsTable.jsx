import React, { useState, useEffect } from 'react';
import './TransactionsTable.css';

const TransactionsTable = () => {
  const [transactions, setTransactions] = useState([]);
  const [loading, setLoading] = useState(true);

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
  const loadTransactions = () => {
    fetch('http://localhost:5000/api/transactions')
      .then(response => response.json())
      .then(data => {
        setTransactions(data);
        setLoading(false);
      })
      .catch(error => {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏:', error);
        setLoading(false);
      });
  };

  // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    loadTransactions();
  }, []);


  const getOwner = (owner) => {
    switch(owner) {
      case 'me': return '–õ–µ—Ä–∞';
      case 'husband': return '–ú–∞–∫—Å–∏–º';
      case 'shared': return '–û–±—â–µ–µ';
      default: return '‚ùì';
    }
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å—É–º–º—ã
  const formatAmount = (amount) => {
    const formatted = Math.abs(amount).toLocaleString();
    return amount < 0 ? `-‚ÇΩ${formatted}` : `+‚ÇΩ${formatted}`;
  };

  if (loading) {
    return <div className="loading">–ó–∞–≥—Ä—É–∂–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏...</div>;
  }

  return (
    <div className="transactions-table">
      <h2>üìã –ò—Å—Ç–æ—Ä–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π</h2>
      
      <div className="table-container">
        <table>
          <thead>
            <tr>
              <th>–î–∞—Ç–∞</th>
              <th>–í–ª–∞–¥–µ–ª–µ—Ü</th>
              <th>–ö–∞—Ç–µ–≥–æ—Ä–∏—è</th>
              <th>–û–ø–∏—Å–∞–Ω–∏–µ</th>
              <th>–°—É–º–º–∞</th>
            </tr>
          </thead>
          <tbody>
            {transactions.map(transaction => (
              <tr key={transaction.id}>
                <td>{transaction.date}</td>
                <td>{getOwner(transaction.owner)}</td>
                <td>{transaction.category}</td>
                <td>{transaction.description}</td>
                <td className={transaction.amount < 0 ? 'expense' : 'income'}>
                  {formatAmount(transaction.amount)}
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>

      <div className="table-info">
        –ü–æ–∫–∞–∑–∞–Ω–æ {transactions.length} –æ–ø–µ—Ä–∞—Ü–∏–π
      </div>
    </div>
  );
};

export default TransactionsTable; 